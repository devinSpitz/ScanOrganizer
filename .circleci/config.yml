# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:    
      - attach_workspace:
          at: ./artifacts  
      - run:
          working_directory: ./artifacts/ScanOrganizer
          name: Run Build Windows
          command: |
            apt update
            apt install -y zip
            ls -axl
            mkdir build/
            mkdir build/Windows/
            mkdir build/Linux/
            dotnet publish -c Release -o build/Windows/ -p:PublishSingleFile=true  -p:PublishTrimmed=true -p:IncludeNativeLibrariesForSelfExtract=true --runtime win-x64 --self-contained true --framework net6.0
            dotnet publish -c Release -o build/Linux/  -p:PublishSingleFile=true  -p:PublishTrimmed=true -p:IncludeNativeLibrariesForSelfExtract=true --runtime linux-x64 --self-contained true --framework net6.0
            VERSION=$(build/Linux/ScanOrganizer --version)
            echo "$VERSION" > "build/Linux/version"
            echo "$VERSION" > "build/Windows/version"
            echo "$VERSION" > "version"
            zip -r build/ScanOrganizerBuildLinux.zip build/Linux/
            zip -r build/ScanOrganizerBuildWindows.zip build/Windows/
            ls -axl build/Linux
            ls -axl build/Windows
            rm -rf build/Linux
            rm -rf build/Windows
      - persist_to_workspace:
          root: .
          paths:
            - ./
  publish-github-release:
    docker:
      - image: circleci/golang:1.17.2
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          working_directory: ./artifacts/artifacts/ScanOrganizer
          name: "Publish Release on GitHub"
          command: |
            ls -axl
            VERSION=$(cat version)
            echo "$VERSION"
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} build/
# Invoke jobs via workflows
#
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  TestBuildRelease: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build:
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              only:
                - master